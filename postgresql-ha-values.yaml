postgresql:
  replicaCount: 3
  podAnnotations:
    vault.hashicorp.com/agent-inject: "true"
    vault.hashicorp.com/role: "postgres-role"
    vault.hashicorp.com/agent-inject-secret-POSTGRES_PASSWORD: "secret/data/postgres#password"
    vault.hashicorp.com/agent-inject-template-POSTGRES_PASSWORD: |
      {{- with secret "secret/data/postgres" -}}
      {{ .Data.data.password }}
      {{- end }}
  containerCommand:
    - /vault-entrypoint/postgresql-ha-vault-entrypoint.sh
  extraVolumeMounts:
    - name: vault-entrypoint
      mountPath: /vault-entrypoint
      readOnly: true
    - name: vault-secret
      mountPath: /vault/secrets
      readOnly: true
  extraVolumes:
    - name: vault-entrypoint
      configMap:
        name: postgresql-ha-vault-entrypoint
    - name: vault-secret
      emptyDir: {}
  extraEnvVars:
    - name: POSTGRES_PASSWORD_FILE
      value: "/vault/secrets/POSTGRES_PASSWORD"
  # El chart espera la contraseña como valor, pero aquí la dejamos vacía para que la tome del archivo inyectado
  password: ""

pgpool:
  replicaCount: 2
  podAnnotations:
    vault.hashicorp.com/agent-inject: "true"
    vault.hashicorp.com/role: "postgres-role"
    vault.hashicorp.com/agent-inject-secret-POSTGRES_PASSWORD: "secret/data/postgres#password"
    vault.hashicorp.com/agent-inject-template-POSTGRES_PASSWORD: |
      {{- with secret "secret/data/postgres" -}}
      {{ .Data.data.password }}
      {{- end }}
  extraEnvVars:
    - name: POSTGRES_PASSWORD_FILE
      value: "/vault/secrets/POSTGRES_PASSWORD"
  extraVolumeMounts:
    - name: vault-secret
      mountPath: /vault/secrets
      readOnly: true

resources:
  requests:
    cpu: 250m
    memory: 512Mi
  limits:
    cpu: 1
    memory: 2Gi 