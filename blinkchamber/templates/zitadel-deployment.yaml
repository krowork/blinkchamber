{{- if (eq (include "common.components.identity.enabled" .) "true") }}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "blinkchamber.fullname" . }}-zitadel
  namespace: {{ .Release.Namespace }}
  labels:
    {{- include "blinkchamber.labels" . | nindent 4 }}
    app.kubernetes.io/component: zitadel
spec:
  replicas: 1
  selector:
    matchLabels:
      {{- include "blinkchamber.selectorLabels" . | nindent 6 }}
      app.kubernetes.io/component: zitadel
  template:
    metadata:
      labels:
        {{- include "blinkchamber.selectorLabels" . | nindent 8 }}
        app.kubernetes.io/component: zitadel
    spec:
      serviceAccountName: {{ include "blinkchamber.fullname" . }}-zitadel-sa
      initContainers:
        - name: wait-vault-secrets
          image: busybox:1.35
          command:
            - 'sh'
            - '-c'
            - 'while [ ! -f /vault/secrets/zitadel_masterkey ]; do echo "Waiting for Vault secrets..."; sleep 2; done; echo "Vault secrets ready"'
          volumeMounts:
            - name: vault-secrets
              mountPath: /vault/secrets
      containers:
        - name: zitadel
          image: ghcr.io/zitadel/zitadel:v2.42.0
          ports:
            - containerPort: {{ .Values.identity.zitadel_config.service.port }}
              name: http
          env:
            - name: ZITADEL_MASTERKEY
              valueFrom:
                secretKeyRef:
                  name: vault-secrets
                  key: zitadel_masterkey
            - name: ZITADEL_ADMIN_USERNAME
              valueFrom:
                secretKeyRef:
                  name: vault-secrets
                  key: zitadel_admin_username
            - name: ZITADEL_ADMIN_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: vault-secrets
                  key: zitadel_admin_password
            - name: ZITADEL_DATABASE_POSTGRES_HOST
              value: {{ .Values.identity.zitadel_config.config.database.postgres.host | quote }}
            - name: ZITADEL_DATABASE_POSTGRES_PORT
              value: {{ .Values.identity.zitadel_config.config.database.postgres.port | quote }}
            - name: ZITADEL_DATABASE_POSTGRES_DATABASE
              value: {{ .Values.identity.zitadel_config.config.database.postgres.database | quote }}
            - name: ZITADEL_DATABASE_POSTGRES_USER_USERNAME
              valueFrom:
                secretKeyRef:
                  name: vault-secrets
                  key: postgres_username
            - name: ZITADEL_DATABASE_POSTGRES_USER_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: vault-secrets
                  key: postgres_password
            - name: ZITADEL_DATABASE_POSTGRES_ADMIN_USERNAME
              valueFrom:
                secretKeyRef:
                  name: vault-secrets
                  key: postgres_username
            - name: ZITADEL_DATABASE_POSTGRES_ADMIN_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: vault-secrets
                  key: postgres_password
            - name: ZITADEL_DATABASE_POSTGRES_USER_SSL_MODE
              value: {{ .Values.identity.zitadel_config.config.database.postgres.sslMode | quote }}
            - name: ZITADEL_DATABASE_POSTGRES_ADMIN_SSL_MODE
              value: {{ .Values.identity.zitadel_config.config.database.postgres.sslMode | quote }}
            - name: ZITADEL_SMTP_HOST
              value: {{ .Values.identity.zitadel_config.config.smtp.host | quote }}
            - name: ZITADEL_SMTP_PORT
              value: {{ .Values.identity.zitadel_config.config.smtp.port | quote }}
            - name: ZITADEL_SMTP_USER
              value: {{ .Values.identity.zitadel_config.config.smtp.user | quote }}
            - name: ZITADEL_SMTP_PASSWORD
              value: {{ .Values.identity.zitadel_config.config.smtp.password | quote }}
            - name: ZITADEL_SMTP_FROM_ADDRESS
              value: {{ .Values.identity.zitadel_config.config.smtp.fromAddress | quote }}
            - name: ZITADEL_SMTP_TLS
              value: {{ .Values.identity.zitadel_config.config.smtp.tls | quote }}
            - name: ZITADEL_SMTP_STARTTLS
              value: {{ .Values.identity.zitadel_config.config.smtp.startTLS | quote }}
            - name: ZITADEL_EXTERNALSECURE
              value: {{ .Values.identity.zitadel_config.config.externalSecure | quote }}
            - name: ZITADEL_TLS_ENABLED
              value: {{ .Values.identity.zitadel_config.config.tls.enabled | quote }}
          volumeMounts:
            - name: vault-secrets
              mountPath: /vault/secrets
              readOnly: true
          command:
            - "/app/zitadel"
          args:
            - "start-from-init"
            - "--masterkey"
            - "$(cat /vault/secrets/zitadel_masterkey)"
            - "--tlsMode"
            - "disabled"
          livenessProbe:
            httpGet:
              path: /debug/healthz
              port: {{ .Values.identity.zitadel_config.service.port }}
            initialDelaySeconds: 60
            periodSeconds: 30
          readinessProbe:
            httpGet:
              path: /debug/ready
              port: {{ .Values.identity.zitadel_config.service.port }}
            initialDelaySeconds: 30
            periodSeconds: 10
          resources:
            {{- toYaml .Values.identity.resources | nindent 12 }}
        - name: vault-agent
          image: hashicorp/vault:1.15.2
          args:
            - "agent"
            - "-config=/vault/config/agent-config.hcl"
          env:
            - name: VAULT_ADDR
              value: "http://{{ include "blinkchamber.fullname" . }}-vault:8200"
          volumeMounts:
            - name: vault-secrets
              mountPath: /vault/secrets
            - name: vault-agent-config
              mountPath: /vault/config
          resources:
            requests:
              cpu: 50m
              memory: 64Mi
            limits:
              cpu: 200m
              memory: 128Mi
      volumes:
        - name: vault-secrets
          emptyDir:
            medium: Memory
        - name: vault-agent-config
          configMap:
            name: {{ include "blinkchamber.fullname" . }}-zitadel-vault-agent-config
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ include "blinkchamber.fullname" . }}-zitadel-vault-agent-config
  namespace: {{ .Release.Namespace }}
  labels:
    {{- include "blinkchamber.labels" . | nindent 4 }}
    app.kubernetes.io/component: zitadel
data:
  agent-config.hcl: |
    exit_after_auth = false
    pid_file = "/tmp/vault-agent-pid"

    auto_auth {
      method "kubernetes" {
        mount_path = "auth/kubernetes"
        config = {
          role = "zitadel-role"
        }
      }
      sink "file" {
        config = {
          path = "/vault/secrets/vault-token"
        }
      }
    }

    template {
      source      = "/vault/config/zitadel-masterkey.tpl"
      destination = "/vault/secrets/zitadel_masterkey"
    }

    template {
      source      = "/vault/config/zitadel-admin.tpl"
      destination = "/vault/secrets/zitadel_admin_username"
    }

    template {
      source      = "/vault/config/zitadel-admin-password.tpl"
      destination = "/vault/secrets/zitadel_admin_password"
    }

    template {
      source      = "/vault/config/postgres-username.tpl"
      destination = "/vault/secrets/postgres_username"
    }

    template {
      source      = "/vault/config/postgres-password.tpl"
      destination = "/vault/secrets/postgres_password"
    }

    vault {
      address = "http://{{ include "blinkchamber.fullname" . }}-vault:8200"
    }

  zitadel-masterkey.tpl: |
    {{`{{ with secret "secret/identity/zitadel" }}`}}
    {{`{{ .Data.data.masterkey }}`}}
    {{`{{ end }}`}}

  zitadel-admin.tpl: |
    {{`{{ with secret "secret/identity/zitadel" }}`}}
    {{`{{ .Data.data.admin_username }}`}}
    {{`{{ end }}`}}

  zitadel-admin-password.tpl: |
    {{`{{ with secret "secret/identity/zitadel" }}`}}
    {{`{{ .Data.data.admin_password }}`}}
    {{`{{ end }}`}}

  postgres-username.tpl: |
    {{`{{ with secret "secret/database/postgres" }}`}}
    {{`{{ .Data.data.username }}`}}
    {{`{{ end }}`}}

  postgres-password.tpl: |
    {{`{{ with secret "secret/database/postgres" }}`}}
    {{`{{ .Data.data.password }}`}}
    {{`{{ end }}`}}
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: {{ include "blinkchamber.fullname" . }}-zitadel-sa
  namespace: {{ .Release.Namespace }}
  labels:
    {{- include "blinkchamber.labels" . | nindent 4 }}
    app.kubernetes.io/component: zitadel
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: {{ include "blinkchamber.fullname" . }}-zitadel-role
  namespace: {{ .Release.Namespace }}
  labels:
    {{- include "blinkchamber.labels" . | nindent 4 }}
    app.kubernetes.io/component: zitadel
rules:
  - apiGroups: [""]
    resources: ["secrets"]
    verbs: ["get", "list"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: {{ include "blinkchamber.fullname" . }}-zitadel-rolebinding
  namespace: {{ .Release.Namespace }}
  labels:
    {{- include "blinkchamber.labels" . | nindent 4 }}
    app.kubernetes.io/component: zitadel
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: {{ include "blinkchamber.fullname" . }}-zitadel-role
subjects:
- kind: ServiceAccount
  name: {{ include "blinkchamber.fullname" . }}-zitadel-sa
  namespace: {{ .Release.Namespace }}
---
apiVersion: v1
kind: Service
metadata:
  name: {{ include "blinkchamber.fullname" . }}-zitadel
  namespace: {{ .Release.Namespace }}
  labels:
    {{- include "blinkchamber.labels" . | nindent 4 }}
    app.kubernetes.io/component: zitadel
spec:
  selector:
    {{- include "blinkchamber.selectorLabels" . | nindent 4 }}
    app.kubernetes.io/component: zitadel
  ports:
  - name: http
    port: {{ .Values.identity.zitadel_config.service.port }}
    targetPort: {{ .Values.identity.zitadel_config.service.port }}
  type: {{ .Values.identity.zitadel_config.service.type }}
{{- if .Values.identity.zitadel_config.ingress.enabled }}
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: {{ include "blinkchamber.fullname" . }}-zitadel
  namespace: {{ .Release.Namespace }}
  labels:
    {{- include "blinkchamber.labels" . | nindent 4 }}
    app.kubernetes.io/component: zitadel
  {{- with .Values.global.ingress.annotations }}
  annotations:
    {{- toYaml . | nindent 4 }}
  {{- end }}
spec:
  {{- if .Values.global.ingress.className }}
  ingressClassName: {{ .Values.global.ingress.className }}
  {{- end }}
  {{- if .Values.global.tls.enabled }}
  tls:
  {{- range .Values.identity.zitadel_config.ingress.tls }}
    - hosts:
    {{- range .hosts }}
      - {{ . | quote }}
    {{- end }}
      secretName: {{ .secretName }}
  {{- end }}
  {{- end }}
  rules:
  {{- range .Values.identity.zitadel_config.ingress.hosts }}
    - host: {{ .host | quote }}
      http:
        paths:
        {{- range .paths }}
          - path: {{ .path }}
            pathType: {{ .pathType }}
            backend:
              service:
                name: {{ include "blinkchamber.fullname" $ }}-zitadel
                port:
                  number: {{ $.Values.identity.zitadel_config.service.port }}
        {{- end }}
  {{- end }}
{{- end }}
{{- end }}