{{- if .Values.mailu.enabled }}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "blinkchamber.fullname" . }}-mailu
  namespace: {{ .Release.Namespace }}
  labels:
    {{- include "blinkchamber.labels" . | nindent 4 }}
    app.kubernetes.io/component: mailu
spec:
  replicas: 1
  selector:
    matchLabels:
      {{- include "blinkchamber.selectorLabels" . | nindent 6 }}
      app.kubernetes.io/component: mailu
  template:
    metadata:
      labels:
        {{- include "blinkchamber.selectorLabels" . | nindent 8 }}
        app.kubernetes.io/component: mailu
    spec:
      serviceAccountName: {{ include "blinkchamber.fullname" . }}-mailu-sa
      initContainers:
        - name: wait-vault-secrets
          image: busybox:1.35
          command:
            - 'sh'
            - '-c'
            - 'while [ ! -f /vault/secrets/mailu_secret_key ]; do echo "Waiting for Vault secrets..."; sleep 2; done; echo "Vault secrets ready"'
          volumeMounts:
            - name: vault-secrets
              mountPath: /vault/secrets
      containers:
        - name: mailu
          image: mailu/nginx:2.0
          ports:
            - containerPort: {{ .Values.mailu.config.services.web.port }}
              name: http
            - containerPort: {{ .Values.mailu.config.services.web.sslPort }}
              name: https
            - containerPort: {{ .Values.mailu.config.services.smtp.port }}
              name: smtp
            - containerPort: {{ .Values.mailu.config.services.smtp.sslPort }}
              name: smtps
            - containerPort: {{ .Values.mailu.config.services.imap.port }}
              name: imap
            - containerPort: {{ .Values.mailu.config.services.imap.sslPort }}
              name: imaps
            - containerPort: {{ .Values.mailu.config.services.pop3.port }}
              name: pop3
            - containerPort: {{ .Values.mailu.config.services.pop3.sslPort }}
              name: pop3s
          env:
            - name: MAILU_HOSTNAME
              value: {{ .Values.mailu.config.hostname | quote }}
            - name: MAILU_SECRET_KEY
              valueFrom:
                secretKeyRef:
                  name: vault-secrets
                  key: mailu_secret_key
            - name: MAILU_ADMIN_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: vault-secrets
                  key: mailu_admin_password
            - name: MAILU_DB_HOST
              value: {{ .Values.mailu.config.database.host | quote }}
            - name: MAILU_DB_PORT
              value: {{ .Values.mailu.config.database.port | quote }}
            - name: MAILU_DB_NAME
              value: {{ .Values.mailu.config.database.database | quote }}
            - name: MAILU_DB_USER
              value: {{ .Values.mailu.config.database.username | quote }}
            - name: MAILU_DB_PASS
              valueFrom:
                secretKeyRef:
                  name: vault-secrets
                  key: mailu_db_password
          volumeMounts:
            - name: mailu-storage
              mountPath: {{ .Values.mailu.config.storage.path }}
            - name: mailu-config
              mountPath: /etc/mailu
            - name: vault-secrets
              mountPath: /vault/secrets
              readOnly: true
          resources:
            {{- toYaml .Values.mailu.resources | nindent 12 }}
        - name: vault-agent
          image: hashicorp/vault:1.15.2
          args:
            - "agent"
            - "-config=/vault/config/agent-config.hcl"
          env:
            - name: VAULT_ADDR
              value: "http://{{ include "blinkchamber.fullname" . }}-vault:8200"
            - name: VAULT_CACERT
              value: "/vault/config/ca.crt"
          volumeMounts:
            - name: vault-secrets
              mountPath: /vault/secrets
            - name: vault-agent-config
              mountPath: /vault/config
          resources:
            requests:
              cpu: 50m
              memory: 64Mi
            limits:
              cpu: 200m
              memory: 128Mi
      volumes:
      - name: mailu-storage
        {{- if .Values.mailu.persistence.enabled }}
        persistentVolumeClaim:
          claimName: {{ include "blinkchamber.fullname" . }}-mailu-pvc
        {{- else }}
        emptyDir:
          sizeLimit: {{ .Values.mailu.persistence.size }}
        {{- end }}
      - name: mailu-config
        configMap:
          name: {{ include "blinkchamber.fullname" . }}-mailu-config
      - name: vault-secrets
        emptyDir:
          medium: Memory
      - name: vault-agent-config
        configMap:
          name: {{ include "blinkchamber.fullname" . }}-mailu-vault-agent-config
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ include "blinkchamber.fullname" . }}-mailu-config
  namespace: {{ .Release.Namespace }}
  labels:
    {{- include "blinkchamber.labels" . | nindent 4 }}
    app.kubernetes.io/component: mailu
data:
  mailu.yml: |
    # Mailu configuration
    hostname: {{ .Values.mailu.config.hostname }}
    secret_key: ""

    # Database configuration
    database:
      engine: postgresql
      host: {{ .Values.mailu.config.database.host }}
      port: {{ .Values.mailu.config.database.port }}
      name: {{ .Values.mailu.config.database.database }}
      user: {{ .Values.mailu.config.database.username }}
      password: ""

    # Web configuration
    web:
      host: 0.0.0.0
      port: {{ .Values.mailu.config.services.web.port }}
      ssl_port: {{ .Values.mailu.config.services.web.sslPort }}

    # Mail configuration
    mail:
      smtp:
        host: 0.0.0.0
        port: {{ .Values.mailu.config.services.smtp.port }}
        ssl_port: {{ .Values.mailu.config.services.smtp.sslPort }}
      imap:
        host: 0.0.0.0
        port: {{ .Values.mailu.config.services.imap.port }}
        ssl_port: {{ .Values.mailu.config.services.imap.sslPort }}
      pop3:
        host: 0.0.0.0
        port: {{ .Values.mailu.config.services.pop3.port }}
        ssl_port: {{ .Values.mailu.config.services.pop3.sslPort }}

    # Storage configuration
    storage:
      path: {{ .Values.mailu.config.storage.path }}
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ include "blinkchamber.fullname" . }}-mailu-vault-agent-config
  namespace: {{ .Release.Namespace }}
  labels:
    {{- include "blinkchamber.labels" . | nindent 4 }}
    app.kubernetes.io/component: mailu
data:
  agent-config.hcl: |
    exit_after_auth = false
    pid_file = "/tmp/vault-agent-pid"
    auto_auth {
      method "kubernetes" {
        mount_path = "auth/kubernetes"
        config = {
          role = "mailu-role"
        }
      }
      sink "file" {
        config = {
          path = "/vault/secrets/vault-token"
        }
      }
    }
    template {
      source      = "/vault/config/mailu-secret.tpl"
      destination = "/vault/secrets/mailu_secret_key"
    }
    template {
      source      = "/vault/config/mailu-admin.tpl"
      destination = "/vault/secrets/mailu_admin_password"
    }
    template {
      source      = "/vault/config/mailu-db.tpl"
      destination = "/vault/secrets/mailu_db_password"
    }
    vault {
      address = "http://{{ include "blinkchamber.fullname" . }}-vault:8200"
    }
  mailu-secret.tpl: |
    {{`{{ with secret "secret/mail/mailu" }}`}}
    {{`{{ .Data.data.secret_key }}`}}
    {{`{{ end }}`}}
  mailu-admin.tpl: |
    {{`{{ with secret "secret/mail/mailu" }}`}}
    {{`{{ .Data.data.admin_password }}`}}
    {{`{{ end }}`}}
  mailu-db.tpl: |
    {{`{{ with secret "secret/mail/mailu" }}`}}
    {{`{{ .Data.data.database_password }}`}}
    {{`{{ end }}`}}
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: {{ include "blinkchamber.fullname" . }}-mailu-sa
  namespace: {{ .Release.Namespace }}
  labels:
    {{- include "blinkchamber.labels" . | nindent 4 }}
    app.kubernetes.io/component: mailu
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: {{ include "blinkchamber.fullname" . }}-mailu-role
  namespace: {{ .Release.Namespace }}
  labels:
    {{- include "blinkchamber.labels" . | nindent 4 }}
    app.kubernetes.io/component: mailu
rules:
  - apiGroups: [""]
    resources: ["secrets"]
    verbs: ["get", "list"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: {{ include "blinkchamber.fullname" . }}-mailu-rolebinding
  namespace: {{ .Release.Namespace }}
  labels:
    {{- include "blinkchamber.labels" . | nindent 4 }}
    app.kubernetes.io/component: mailu
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: {{ include "blinkchamber.fullname" . }}-mailu-role
subjects:
- kind: ServiceAccount
  name: {{ include "blinkchamber.fullname" . }}-mailu-sa
  namespace: {{ .Release.Namespace }}
{{- if .Values.mailu.persistence.enabled }}
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: {{ include "blinkchamber.fullname" . }}-mailu-pvc
  namespace: {{ .Release.Namespace }}
  labels:
    {{- include "blinkchamber.labels" . | nindent 4 }}
    app.kubernetes.io/component: mailu
spec:
  accessModes:
    - ReadWriteOnce
  storageClassName: {{ .Values.mailu.persistence.storageClass }}
  resources:
    requests:
      storage: {{ .Values.mailu.persistence.size }}
{{- end }}
---
apiVersion: v1
kind: Service
metadata:
  name: {{ include "blinkchamber.fullname" . }}-mailu
  namespace: {{ .Release.Namespace }}
  labels:
    {{- include "blinkchamber.labels" . | nindent 4 }}
    app.kubernetes.io/component: mailu
spec:
  selector:
    {{- include "blinkchamber.selectorLabels" . | nindent 4 }}
    app.kubernetes.io/component: mailu
  ports:
  - name: http
    port: {{ .Values.mailu.config.services.web.port }}
    targetPort: {{ .Values.mailu.config.services.web.port }}
  - name: https
    port: {{ .Values.mailu.config.services.web.sslPort }}
    targetPort: {{ .Values.mailu.config.services.web.sslPort }}
  - name: smtp
    port: {{ .Values.mailu.config.services.smtp.port }}
    targetPort: {{ .Values.mailu.config.services.smtp.port }}
  - name: smtps
    port: {{ .Values.mailu.config.services.smtp.sslPort }}
    targetPort: {{ .Values.mailu.config.services.smtp.sslPort }}
  - name: imap
    port: {{ .Values.mailu.config.services.imap.port }}
    targetPort: {{ .Values.mailu.config.services.imap.port }}
  - name: imaps
    port: {{ .Values.mailu.config.services.imap.sslPort }}
    targetPort: {{ .Values.mailu.config.services.imap.sslPort }}
  - name: pop3
    port: {{ .Values.mailu.config.services.pop3.port }}
    targetPort: {{ .Values.mailu.config.services.pop3.port }}
  - name: pop3s
    port: {{ .Values.mailu.config.services.pop3.sslPort }}
    targetPort: {{ .Values.mailu.config.services.pop3.sslPort }}
  type: ClusterIP
{{- if .Values.mailu.ingress.enabled }}
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: {{ include "blinkchamber.fullname" . }}-mailu
  namespace: {{ .Release.Namespace }}
  labels:
    {{- include "blinkchamber.labels" . | nindent 4 }}
    app.kubernetes.io/component: mailu
  {{- with .Values.global.ingress.annotations }}
  annotations:
    {{- toYaml . | nindent 4 }}
  {{- end }}
spec:
  {{- if .Values.global.ingress.className }}
  ingressClassName: {{ .Values.global.ingress.className }}
  {{- end }}
  {{- if .Values.global.tls.enabled }}
  tls:
  {{- range .Values.mailu.ingress.tls }}
    - hosts:
    {{- range .hosts }}
      - {{ . | quote }}
    {{- end }}
      secretName: {{ .secretName }}
  {{- end }}
  {{- end }}
  rules:
  {{- range .Values.mailu.ingress.hosts }}
    - host: {{ .host | quote }}
      http:
        paths:
        {{- range .paths }}
          - path: {{ .path }}
            pathType: {{ .pathType }}
            backend:
              service:
                name: {{ include "blinkchamber.fullname" $ }}-mailu
                port:
                  number: {{ $.Values.mailu.config.services.web.port }}
        {{- end }}
  {{- end }}
{{- end }}
{{- end }}
